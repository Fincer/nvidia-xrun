#!/bin/bash

# nvidia-xrun - Helper script for nvidia-xrun-core
# Copyright (C) 2018  Pekka Helenius (~Fincer)
#
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation; either version 2
# of the License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.

###########################################################
# Essential commands

COMMANDS=(
  nvidia-xrun-core
  ps
  sudo
)

###########################################################
# Check for command dependencies

function checkCommands() {

    if [[ $(which --help 2>/dev/null) ]] && [[ $(echo --help 2>/dev/null) ]]; then

        local a=0
        for command in ${@}; do
            if [[ ! $(which $command 2>/dev/null) ]]; then
                COMMANDS_NOTFOUND[$a]=$command
                let a++
            fi
        done

        if [[ -n $COMMANDS_NOTFOUND ]]; then
            echo -e "\nError! The following commands could not be found: ${COMMANDS_NOTFOUND[*]}\nAborting\n"
            exit 1
        fi
    else
        exit 1
    fi
}

checkCommands "${COMMANDS[*]}"

###########################################################
# Core script contents

if [[ $UID -ne 0 ]]; then

  for arg in ${@}; do
    if [[ $arg == *"nvidia-xrun"* ]]; then
      echo "Can't use nvidia-xrun executables as arguments. Aborting."
      exit 1
    fi
  done

  sudo nvidia-xrun-core $*

  # We wait until the previous command is executed after which we terminate.
  # We do this to keep this process alive because existence of this process,
  # known as 'nvidia-xrun' is checked by the nvidia-xrun-core
  wait
  exit 0

else
  echo "Do not run this executable as root or with sudo. Aborting."
  exit 1
fi
